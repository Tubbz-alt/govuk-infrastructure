---
definitions:

resource_types:
  - name: github-commit
    type: registry-image
    source:
      repository: govuk/github-commit
      tag: 0.1.0

resources:
  - name: govuk-infrastructure-commit
    type: github-commit
    icon: github
    source:
      # Will fetch commits fromÂ *any* branch
      repository: alphagov/govuk-infrastructure
      access_token: ((govuk_ci_replatforming_github_access_token))
      path: govuk-infrastructure-commit

  - &git-repo
    icon: github
    name: govuk-infrastructure
    source:
      branch: main
      uri: https://github.com/alphagov/govuk-infrastructure
    type: git

  - <<: *git-repo
    name: content-store
    source:
      branch: master
      uri: https://github.com/alphagov/content-store
      tag_filter: release_*

  - <<: *git-repo
    name: frontend
    source:
      branch: master
      uri: https://github.com/alphagov/frontend
      tag_filter: release_*

  - <<: *git-repo
    name: publisher
    source:
      branch: master
      uri: https://github.com/alphagov/publisher
      tag_filter: release_*

  - <<: *git-repo
    name: publishing-api
    source:
      branch: master
      uri: https://github.com/alphagov/publishing-api
      tag_filter: release_*

  - <<: *git-repo
    name: router
    source:
      branch: master
      uri: https://github.com/alphagov/router
      tag_filter: release_*

  - <<: *git-repo
    name: router-api
    source:
      branch: master
      uri: https://github.com/alphagov/router-api
      tag_filter: release_*

  - <<: *git-repo
    name: signon
    source:
      branch: master
      uri: https://github.com/alphagov/signon
      tag_filter: release_*

  - <<: *git-repo
    name: static
    source:
      branch: master
      uri: https://github.com/alphagov/static
      tag_filter: release_*

jobs:
  - name: update-pipeline
    plan:
    - get: govuk-infrastructure
      trigger: true
    - file: govuk-infrastructure/concourse/pipelines/ci.yml
      set_pipeline: ci-govuk-infrastructure-main

  - name: terraform-fmt
    plan:
    - get: govuk-infrastructure-commit
      trigger: true
    - put: govuk-infrastructure-commit
      params:
        status: pending
        context: terraform-fmt
    - task: terraform-fmt
      config:
        inputs:
        - name: govuk-infrastructure-commit
        params:
          TF_IN_AUTOMATION: true
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: governmentpaas/terraform
            tag: terraform-0.13.3
            username: ((docker_hub_username))
            password: ((docker_hub_authtoken))
        run:
          dir: govuk-infrastructure-commit/repo/terraform
          path: sh
          args:
          - '-c'
          - |
            set -eu
            if ! terraform fmt -write=false -diff=true -list=true -recursive -check .
            then
              >&2 echo "Some terraform files weren't formatted correctly. Run 'terraform fmt' to fix them."
            fi
    on_success:
      put: govuk-infrastructure-commit
      params: {status: success, context: terraform-fmt} # puts a success status on the GitHub commit
    on_failure:
      put: govuk-infrastructure-commit
      params: {status: failure, context: terraform-fmt}
    on_abort:
      put: govuk-infrastructure-commit
      params: {status: error, context: terraform-fmt}
    on_error:
      put: govuk-infrastructure-commit
      params: {status: error, context: terraform-fmt}

  - name: rspec
    plan:
    - get: govuk-infrastructure-commit
      trigger: true
    - put: govuk-infrastructure-commit
      params:
        status: pending
        context: rspec
    - task: rspec
      config:
        inputs:
        - name: govuk-infrastructure-commit
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: rubylang/ruby
            tag: 2.7.2-bionic
            username: ((docker_hub_username))
            password: ((docker_hub_authtoken))
        run:
          dir: govuk-infrastructure-commit/repo
          path: sh
          args:
          - '-c'
          - |
            set -eu
            bundle install
            rspec
      on_success:
        put: govuk-infrastructure-commit
        params: {status: success, context: rspec}
      on_failure:
        put: govuk-infrastructure-commit
        params: {status: failure, context: rspec}
      on_abort:
        put: govuk-infrastructure-commit
        params: {status: error, context: rspec}
      on_error:
        put: govuk-infrastructure-commit
        params: {status: error, context: rspec}

  - name: terraform-plan-govuk-deployment
    plan:
    - get: govuk-infrastructure-commit
      trigger: true
    - put: govuk-infrastructure-commit
      params:
        status: pending
        context: terraform-plan-govuk-deployment
    - task: terraform-plan
      file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-govuk-deployment.yml
      on_success:
        put: govuk-infrastructure-commit
        params: {status: success, context: terraform-plan-govuk-deployment}
      on_failure:
        put: govuk-infrastructure-commit
        params: {status: failure, context: terraform-plan-govuk-deployment}
      on_abort:
        put: govuk-infrastructure-commit
        params: {status: error, context: terraform-plan-govuk-deployment}
      on_error:
        put: govuk-infrastructure-commit
        params: {status: error, context: terraform-plan-govuk-deployment}

  - name: terraform-plan-apps-deployment
    plan:
    - in_parallel:
      - get: govuk-infrastructure-commit
        trigger: true
      - get: frontend
      - get: content-store
      - get: publisher
      - get: publishing-api
      - get: router
      - get: router-api
      - get: signon
      - get: static
    - put: govuk-infrastructure-commit
      params:
        status: pending
        context: terraform-plan-apps-deployment
    - in_parallel:
      - task: terraform-plan-frontend
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: frontend
          DEPLOYMENT: frontend
      - task: terraform-plan-draft-frontend
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: frontend
          DEPLOYMENT: draft-frontend
      - task: terraform-plan-content-store
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: content-store
          DEPLOYMENT: content-store
      - task: terraform-plan-draft-content-store
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: content-store
          DEPLOYMENT: draft-content-store
      - task: terraform-plan-publisher-web
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: publisher
          DEPLOYMENT: publisher-web
      - task: terraform-plan-publisher-worker
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: publisher
          DEPLOYMENT: publisher-worker
      - task: terraform-plan-publishing-api-web
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: publishing-api
          DEPLOYMENT: publishing-api-web
      - task: terraform-plan-publishing-api-worker
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: publishing-api
          DEPLOYMENT: publishing-api-worker
      - task: terraform-plan-router
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: router
          DEPLOYMENT: router
      - task: terraform-plan-draft-router
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: router
          DEPLOYMENT: draft-router
      - task: terraform-plan-router-api
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: router-api
          DEPLOYMENT: router-api
      - task: terraform-plan-draft-router-api
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: router-api
          DEPLOYMENT: draft-router-api
      - task: terraform-plan-signon-api
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: signon
          DEPLOYMENT: signon
      - task: terraform-plan-static-api
        file: govuk-infrastructure-commit/repo/concourse/tasks/terraform-plan-app-deployment.yml
        params:
          APPLICATION: static
          DEPLOYMENT: static
      on_success:
        put: govuk-infrastructure-commit
        params: {status: success, context: terraform-plan-apps-deployment}
      on_failure:
        put: govuk-infrastructure-commit
        params: {status: failure, context: terraform-plan-apps-deployment}
      on_abort:
        put: govuk-infrastructure-commit
        params: {status: error, context: terraform-plan-apps-deployment}
      on_error:
        put: govuk-infrastructure-commit
        params: {status: error, context: terraform-plan-apps-deployment}
